From a0f3321356acf63a742b31d86666f778369c6e1a Mon Sep 17 00:00:00 2001
From: wouterlucas <wouter@wouterlucas.com>
Date: Fri, 15 Jun 2018 09:29:25 -0700
Subject: [PATCH] [WebKitBrowser] Guard webautomation APIs for WebKits that do
 not support it

---
 WebKitBrowser/WebKitImplementation.cpp | 8 ++++++++
 1 file changed, 8 insertions(+)

diff --git a/WebKitBrowser/WebKitImplementation.cpp b/WebKitBrowser/WebKitImplementation.cpp
index 45f63ad..16e49a8 100644
--- a/WebKitBrowser/WebKitImplementation.cpp
+++ b/WebKitBrowser/WebKitImplementation.cpp
@@ -198,6 +198,7 @@ namespace Plugin {
         onFrameDisplayed,
     };
 
+#ifdef WEB_AUTOMATION
     WKContextAutomationClientV0 _handlerAutomation = {
         { 0, nullptr },
         // allowsRemoteAutomation
@@ -220,6 +221,7 @@ namespace Plugin {
         // requestNewPage
         onAutomationSessionRequestNewPage
     };
+#endif
 
     /* ---------------------------------------------------------------------------------------------------
 struct CustomLoopHandler
@@ -793,6 +795,7 @@ static GSourceFuncs _handlerIntervention =
             return _config.Whitelist;
         }
 
+#ifdef WEB_AUTOMATION
         void OnRequestAutomationSession(WKContextRef context, WKStringRef sessionID)
         {
             _automationSession = WKWebAutomationSessionCreate(sessionID);
@@ -800,6 +803,7 @@ static GSourceFuncs _handlerIntervention =
             WKWebAutomationSessionSetClient(_automationSession, &_handlerAutomationSession.base);
             WKContextSetAutomationSession(context, _automationSession);
         }
+#endif
 
         WKPageRef GetPage() const
         {
@@ -1017,10 +1021,12 @@ static GSourceFuncs _handlerIntervention =
             _handlerInjectedBundle.base.clientInfo = static_cast<void*>(this);
             WKContextSetInjectedBundleClient(context, &_handlerInjectedBundle.base);
 
+#ifdef WEB_AUTOMATION
             if (_config.Automation.Value()) {
                 _handlerAutomation.base.clientInfo = static_cast<void*>(this);
                 WKContextSetAutomationClient(context, &_handlerAutomation.base);
             }
+#endif
 
             WKPageSetPageUIClient(_page, &_handlerPageUI.base);
 
@@ -1206,11 +1212,13 @@ static GSourceFuncs _handlerIntervention =
         }
     }
 
+#ifdef WEB_AUTOMATION
     /* static */ void didRequestAutomationSession(WKContextRef context, WKStringRef sessionID, const void* clientInfo)
     {
         WebKitImplementation* browser = const_cast<WebKitImplementation*>(static_cast<const WebKitImplementation*>(clientInfo));
         browser->OnRequestAutomationSession(context, sessionID);
     }
+#endif
 
     /* static */ WKPageRef onAutomationSessionRequestNewPage(WKWebAutomationSessionRef, const void* clientInfo)
     {
