From 1efe125fac609ef3cef855f754de09a4331fe59f Mon Sep 17 00:00:00 2001
From: Khem Raj <raj.khem@gmail.com>
Date: Thu, 21 Feb 2019 21:41:08 -0800
Subject: [PATCH] Detect libexecinfo if available on platform

Some platform e.g. freebsd or musl based linux platforms
where backtrace() API is not available, there is external
library libexecinfo which provides same funcitonality
try to find this library if available add it to linker
cmdline

Signed-off-by: Khem Raj <raj.khem@gmail.com>
---
 CMakeLists.txt                     | 3 ++-
 Source/WPEFramework/CMakeLists.txt | 1 +
 Source/WPEFramework/PluginHost.cpp | 4 ++++
 Source/core/CMakeLists.txt         | 3 ++-
 Source/core/Portability.cpp        | 1 +
 cmake/modules/FindExecInfo.cmake   | 2 ++
 6 files changed, 12 insertions(+), 2 deletions(-)
 create mode 100644 cmake/modules/FindExecInfo.cmake

--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -21,6 +21,7 @@ set(CMAKE_MODULE_PATH
 
 include(platform)
 include(CmakeHelperFunctions)
+find_package(ExecInfo)
 
 set(PLATFORM "PC_UNIX" CACHE STRING
         "Defines on what platform WPEFramework will run")
@@ -44,7 +45,7 @@ install(FILES "${CMAKE_CURRENT_BINARY_DI
         RENAME "${NAMESPACE}Config.cmake"
         DESTINATION lib/cmake/${NAMESPACE})
 
-install(DIRECTORY 
+install(DIRECTORY
             "${CMAKE_SOURCE_DIR}/cmake/config"
             "${CMAKE_SOURCE_DIR}/cmake/templates"
             "${CMAKE_SOURCE_DIR}/cmake/modules"
--- a/Source/WPEFramework/CMakeLists.txt
+++ b/Source/WPEFramework/CMakeLists.txt
@@ -26,6 +26,7 @@ endif()
 target_link_libraries(${TARGET}
         PRIVATE
           ${CMAKE_DL_LIBS}
+	  ${LIBEXECINFO_LIBRARY}
           ${NAMESPACE}Core::${NAMESPACE}Core
           ${NAMESPACE}Tracing::${NAMESPACE}Tracing
           ${NAMESPACE}Cryptalgo::${NAMESPACE}Cryptalgo
--- a/Source/WPEFramework/PluginHost.cpp
+++ b/Source/WPEFramework/PluginHost.cpp
@@ -5,6 +5,10 @@
 #include <dlfcn.h>    // for dladdr
 #endif
 
+#ifdef __LINUX__
+#include <execinfo.h>
+#endif
+
 MODULE_NAME_DECLARATION(BUILD_REFERENCE)
 
 
--- a/Source/core/CMakeLists.txt
+++ b/Source/core/CMakeLists.txt
@@ -144,6 +144,7 @@ target_link_libraries(${TARGET}
           CompileSettings::CompileSettings
         PRIVATE
           ${CMAKE_DL_LIBS}
+	  ${LIBEXECINFO_LIBRARY}
           LIBRT::LIBRT
           Threads::Threads
         )
@@ -201,4 +202,4 @@ InstallPackageConfig(
 )
 
 InstallCMakeConfig(
-        TARGETS ${TARGET})
\ No newline at end of file
+        TARGETS ${TARGET})
--- a/Source/core/Portability.cpp
+++ b/Source/core/Portability.cpp
@@ -7,6 +7,7 @@
 
 #ifdef __LINUX__
 #include <signal.h>
+#include <execinfo.h>
 #include <atomic>
 #endif
 
--- /dev/null
+++ b/cmake/modules/FindExecInfo.cmake
@@ -0,0 +1,7 @@
+include(CheckSymbolExists)
+CHECK_SYMBOL_EXISTS(__GNU_LIBRARY__ "features.h" GNU_LIBRARY_FOUND)
+
+if(NOT GNU_LIBRARY_FOUND)
+	find_library (LIBEXECINFO_LIBRARY NAMES execinfo)
+	mark_as_advanced(LIBEXECINFO_LIBRARY)
+endif()
