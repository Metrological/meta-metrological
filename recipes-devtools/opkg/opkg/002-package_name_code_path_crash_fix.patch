diff --git a/libopkg/opkg.c b/libopkg/opkg.c
index 05de83d..1706e22 100644
--- a/libopkg/opkg.c
+++ b/libopkg/opkg.c
@@ -207,7 +207,10 @@ int opkg_install_package(const char *package_url,
     /* Pre-process the package name to handle remote URLs and paths to
      * ipk/opk files.
      */
-    opkg_prepare_url_for_install(package_url, &package_name);
+    if (opkg_prepare_url_for_install(package_url, &package_name) != 0) {
+        opkg_msg(ERROR, "Couldn't prepare %s for install\n", package_url);
+        return -1;
+    }
 
     /* ... */
     pkg_info_preinstall_check();
diff --git a/libopkg/opkg_download.c b/libopkg/opkg_download.c
index 5c74f66..8c66ecd 100644
--- a/libopkg/opkg_download.c
+++ b/libopkg/opkg_download.c
@@ -425,6 +425,9 @@ int opkg_prepare_url_for_install(const char *url, char **namep)
     abstract_pkg_vec_t *apkgs = NULL;
     abstract_pkg_t *ab_pkg = NULL;
 
+    if (namep)
+        *namep = NULL;
+
     /* First heuristic: Maybe it's a remote URL. */
     if (url_has_remote_protocol(url)) {
         char *cache_location;
@@ -498,6 +501,13 @@ int opkg_prepare_url_for_install(const char *url, char **namep)
             }
         }
 
+     /*
+      * url is a package name. Set the namep to it then, otherwise there will be a crash
+      * caused by usage of an invalid pointer.
+      */
+        if (namep)
+            *namep = url;
+
         /* Nothing special to do. */
         goto CLEANUP;
     }
